var _ubi_print_imgcount=0;function CanvasDrawRect(canvas, linewidth, strokestyle, fillstyle, isround, radius) { if( !canvas.getContext ) G_vmlCanvasManager.initElement(canvas); var ctx=canvas.getContext("2d"); ctx.save(); ctx.lineWidth=linewidth; ctx.strokeStyle=strokestyle; ctx.beginPath(); if(isround) { var x=ctx.lineWidth / 2; var y=ctx.lineWidth / 2; var width=canvas.width - ctx.lineWidth; var height=canvas.height - ctx.lineWidth; ctx.beginPath(); ctx.moveTo(x,y+radius); ctx.lineTo(x,y+height-radius); ctx.quadraticCurveTo(x,y+height,x+radius,y+height); ctx.lineTo(x+width-radius,y+height); ctx.quadraticCurveTo(x+width,y+height,x+width,y+height-radius); ctx.lineTo(x+width,y+radius); ctx.quadraticCurveTo(x+width,y,x+width-radius,y); ctx.lineTo(x+radius,y); ctx.quadraticCurveTo(x,y,x,y+radius); } else { ctx.rect(ctx.lineWidth / 2, ctx.lineWidth / 2, canvas.width - ctx.lineWidth, canvas.height - ctx.lineWidth); } ctx.closePath(); if( fillstyle != "" ) { ctx.fillStyle=fillstyle; ctx.fill(); } ctx.stroke(); ctx.restore();};function CanvasDrawCircle(canvas, linewidth, strokestyle, fillstyle) { if( !canvas.getContext ) G_vmlCanvasManager.initElement(canvas); var ctx=canvas.getContext("2d"); ctx.save(); ctx.lineWidth=linewidth; ctx.strokeStyle=strokestyle; var KAPPA=4 * ((Math.sqrt(2) - 1) / 3); var cx=canvas.width / 2; var cy=canvas.height / 2; var rx=cx * KAPPA; var ry=cy * KAPPA; ctx.beginPath(); ctx.moveTo(cx, ctx.lineWidth); ctx.bezierCurveTo(cx + rx, ctx.lineWidth, canvas.width - ctx.lineWidth, cy - ry, canvas.width - ctx.lineWidth, cy); ctx.bezierCurveTo(canvas.width - ctx.lineWidth, cy + ry, cx + rx, canvas.height - ctx.lineWidth, cx, canvas.height - ctx.lineWidth); ctx.bezierCurveTo(cx - rx, canvas.height - ctx.lineWidth, ctx.lineWidth, cy + ry, ctx.lineWidth, cy); ctx.bezierCurveTo(ctx.lineWidth, cy - ry, cx - rx, ctx.lineWidth, cx, ctx.lineWidth); ctx.closePath(); if( fillstyle != "" ) { ctx.fillStyle="#" + getBackgroundColor(doc, item); ctx.fill(); } ctx.stroke(); ctx.restore();};function CanvasDrawImage(canvas, imageid, imagesrc, x, y, width, height) { _ubi_print_imgcount++; if( !canvas.getContext ) G_vmlCanvasManager.initElement(canvas); var ctx=canvas.getContext("2d"); var image=new Image(); image.id=imageid; image.src=imagesrc; image.onload=function() { ctx.drawImage(image, x, y, width, height); _ubi_print_imgcount--; }; image.onerror=function(){ _ubi_print_imgcount--; };};function ChildWindowPrintHTML() { if (_ubi_print_imgcount > 0) { timer=setTimeout(function() { ChildWindowPrintHTML(); }, 500); return; } window.print(); window.close();}